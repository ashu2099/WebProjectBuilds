{"version":3,"sources":["CONSTANTS.js","store/actions/onlySingleActions.js","store/reducers/onlySingleReducer.js","components/cardThumbnail/CardThumbnail.js","components/cardList/CardList.js","components/loaderIndicator/LoaderIndicator.js","App.js","reportWebVitals.js","index.js"],"names":["APIS","BASE_URL","CONSTANTS","SET_LOADER_STATE","showLoader","value","type","initialState","CardThumbnail","props","className","cardTitle","cardBody","CardList","actionDispatcher","useDispatch","useState","listOfCards","setListOfCards","isFetching","setIsFetching","pageNumber","setPageNumber","intersetionDetector","useRef","useEffect","startIndex","start","dispatch","fetch","method","headers","then","response","json","rsData","prevList","concat","catch","err","console","warn","finally","observer","IntersectionObserver","entries","isIntersecting","prev","root","rootMargin","threshold","currentIntersectionRef","current","observe","unobserve","map","x","title","body","id","ref","LoaderIndicator","useSelector","state","onlySingleReducer","rootReducer","combineReducers","action","store","createStore","applyMiddleware","ReduxThunk","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76163fc0.chunk.js","sourcesContent":["const BASE_URL = \"https://jsonplaceholder.typicode.com\";\r\n\r\nexport const APIS = {\r\n  POSTS: BASE_URL + \"/posts\",\r\n};\r\n\r\nexport const CONSTANTS = {\r\n  CARD_LIMIT: 10,\r\n};\r\n","import { APIS, CONSTANTS } from \"../../CONSTANTS\";\r\n\r\nexport const SET_LOADER_STATE = \"SET_LOADER_STATE\";\r\n\r\nexport const showLoader = (value) => {\r\n  return { type: SET_LOADER_STATE, showLoader: value };\r\n};\r\n\r\nexport const fetchCards = (start) => {\r\n  return (dispatch) => {\r\n    return fetch(\r\n      APIS.POSTS + `?_start=${start}&_limit=${CONSTANTS.CARD_LIMIT}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      }\r\n    ).then((response) => response.json());\r\n  };\r\n};\r\n","import { SET_LOADER_STATE } from \"../actions/onlySingleActions\";\r\n\r\nconst initialState = {\r\n  showLoader: false,\r\n};\r\n\r\nexport default function OnlySingleReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_LOADER_STATE: {\r\n      return { ...state, showLoader: action.showLoader };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import \"./CardThumbnail.css\";\r\n\r\nexport default function CardThumbnail(props) {\r\n  return (\r\n    <div className=\"column\">\r\n      <div className=\"card\">\r\n        <h2>{props.cardTitle}</h2>\r\n        <p>{props.cardBody}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { React, useState, useEffect, useRef } from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { fetchCards, showLoader } from \"../../store/actions/onlySingleActions\";\r\n\r\nimport { CONSTANTS } from \"../../CONSTANTS\";\r\n\r\nimport \"./CardList.css\";\r\nimport CardThumbnail from \"../cardThumbnail/CardThumbnail\";\r\n\r\nexport default function CardList() {\r\n  const actionDispatcher = useDispatch();\r\n\r\n  const [listOfCards, setListOfCards] = useState([]);\r\n\r\n  const [isFetching, setIsFetching] = useState(false);\r\n\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n\r\n  const intersetionDetector = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (pageNumber > 0) {\r\n      let startIndex = (pageNumber - 1) * CONSTANTS.CARD_LIMIT;\r\n      actionDispatcher(showLoader(true));\r\n\r\n      actionDispatcher(fetchCards(startIndex))\r\n        .then((rsData) => {\r\n          setListOfCards((prevList) => prevList.concat(rsData));\r\n        })\r\n        .catch((err) => {\r\n          console.warn(err);\r\n        })\r\n        .finally(() => {\r\n          actionDispatcher(showLoader(false));\r\n          setIsFetching(false);\r\n        });\r\n    }\r\n  }, [pageNumber,actionDispatcher]);\r\n\r\n  useEffect(() => {\r\n    const options = {\r\n      root: null,\r\n      rootMargin: \"0px\",\r\n      threshold: 0.25,\r\n    };\r\n\r\n    const observer = new IntersectionObserver((entries) => {\r\n      const target = entries[0];\r\n\r\n      if (target.isIntersecting && !isFetching) {\r\n        setIsFetching(true);\r\n        setPageNumber((prev) => prev + 1);\r\n      }\r\n    }, options);\r\n\r\n    const currentIntersectionRef = intersetionDetector?.current;\r\n\r\n    if (!!currentIntersectionRef) {\r\n      observer.observe(currentIntersectionRef);\r\n    }\r\n\r\n    return () => observer.unobserve(currentIntersectionRef);\r\n  }, [intersetionDetector, isFetching]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"list-title\">Cards:</h1>\r\n      <div className=\"row\">\r\n        {listOfCards.map((x) => (\r\n          <CardThumbnail key={x.id} cardTitle={x.title} cardBody={x.body} />\r\n        ))}\r\n      </div>\r\n      <div ref={intersetionDetector} className=\"intersector\"></div>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\n\r\nimport \"./LoaderIndicator.css\";\r\n\r\nexport default function LoaderIndicator() {\r\n  const isLoading = useSelector((state) => state.onlySingleReducer.showLoader);\r\n\r\n  return (\r\n    !!isLoading && (\r\n      <div className=\"loader-parent\">\r\n        <div className=\"lds-roller\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import \"./App.css\";\n\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport ReduxThunk from \"redux-thunk\";\n\nimport onlySingleReducer from \"./store/reducers/onlySingleReducer\";\n\nimport CardList from \"./components/cardList/CardList\";\nimport Loader from \"./components/loaderIndicator/LoaderIndicator\";\n\nconst rootReducer = combineReducers({\n  onlySingleReducer: onlySingleReducer,\n});\n\n//if there were multiple reducers this would have been useful.\n\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk));\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <CardList />\n        <Loader />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}